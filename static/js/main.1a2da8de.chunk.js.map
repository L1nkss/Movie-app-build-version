{"version":3,"sources":["constants/contants.js","redux/reducers/genres/constants/constants.js","redux/reducers/genres/reducer.js","redux/reducers/films/constants/constants.js","redux/reducers/films/reducer.js","redux/reducers/redusers.js","utils/adapters/genre.js","utils/adapters/film.js","utils/adapters/film-details.js","redux/reducers/films/actions/actions.js","api/api.js","config/key.js","redux/reducers/genres/saga/saga.js","redux/reducers/genres/actions/actions.js","redux/reducers/films/saga/saga.js","redux/sagas/sagas.js","redux/store.js","components/spinner/spinner.jsx","components/mistake/mistake.jsx","components/header/header.jsx","components/header/selectors/selectors.js","components/header/header.connect.jsx","utils/utils.js","components/film-card/film-card.jsx","pages/film-list/utils/utils.jsx","pages/film-list/film-list.jsx","pages/film-list/selectors/selectors.js","pages/film-list/film-list.connect.jsx","utils/history.js","components/menu-list/components/menu-list-item.jsx","components/menu-list/menu-list.jsx","components/menu-list/menu-list.connect.jsx","components/rating/rating.jsx","components/cast/cast.jsx","utils/adapters/cast.js","pages/film-details/film-details.jsx","pages/film-details/film-details.connect.js","pages/actors/actors.jsx","utils/adapters/actor.js","pages/actor/actor.jsx","components/not-found/not-found.jsx","routes/routes.jsx","pages/main/main.jsx","pages/aside-menu/aside-menu.jsx","pages/aside-menu/aside-menu.connect.jsx","components/app/app.jsx","index.jsx"],"names":["FILM_NAVIGATION","name","label","icon","RoutePathes","imageUrl","ActionType","GET_GENRES_REQUEST","GET_GENRES_SUCCESS","GET_GENRES_ERROR","CHANGE_ACTIVE_GENRE","initialState","genres","filmGenres","active","loading","error","GET_FILMS_REQUEST","GET_FILM_SUCCESS","GET_FILM_ERROR","GET_MORE_FILM_REQUEST","GET_MORE_FILM_SUCCESS","GET_TOTAL_FILMS_PAGES","SET_CURRENT_PAGE","SET_SEARCH_STRING","GET_FILM_DETAILS_REQUEST","GET_FILM_DETAILS_SUCCESS","GET_FILM_DETAILS_ERROR","films","filmDetails","details","loadingMoreFilms","currentPage","totalPages","searchString","combineReducers","genre","state","action","type","payload","data","GenreAdapter","values","map","value","FilmAdapter","this","changeValues","genreIds","genre_ids","id","overview","title","adult","posterPath","poster_path","originalLanguage","original_language","voteAverage","vote_average","releaseDate","release_date","FilmDetailsAdapter","homepage","runtime","tagline","voteCount","vote_count","addIconField","setCurrentPage","page","getFilmsError","url","token","api","axios","create","baseURL","params","api_key","timeout","headers","withCredentials","getGenres","bind","getFilms","getFilmDetails","getRecommendations","getFilmCast","getPersonDetails","discover","get","language","genreSaga","watchGenreSaga","call","Service","response","put","takeEvery","filmsMoreSaga","filmsSaga","getFilmDetailsSaga","watchFilmsSaga","watchMoreFilmsSaga","watchFilmDetailsSaga","with_genres","results","changeKeyName","total_pages","Error","Number","film","changeValuesToFilmDetails","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","Spinner","props","className","isWrapperFull","wrapperClass","width","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","defaultProps","Mistake","Header","activeGenre","placeholder","onChange","evt","changeSearchString","target","getActiveGenreName","createSelector","idx","findIndex","connect","dispatch","setSearchString","calculateAge","birthDate","deathDate","dateStart","moment","dateEnd","diff","FilmCard","vote","voteRating","result","getRatingClass","to","poster","src","alt","createFilmCards","filmCardProps","key","FilmList","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","totalPage","nextPage","loadMoreFilms","currentGenre","useEffect","addEventListener","removeEventListener","loadFilms","getFilteredFilms","filter","toLocaleLowerCase","includes","getActiveGenre","getFilmsRequest","getMoreFilmsRequest","history","createBrowserHistory","MenuListItem","item","onClick","changeActiveGenre","refreshCurrentPage","push","MenuList","items","noActive","Rating","containerClass","Cast","castToShow","itemsToShow","cast","slice","element","profilePath","character","CastAdapter","adaptValue","profile_path","FilmDetails","useState","filmsRecommendations","setFilms","isRecommendationsLoading","setRecommendationLoader","isCastLoading","setLoading","setCast","match","getFilmRecommendations","React","useCallback","then","adaptValues","catch","loadDetails","isContentLoading","Date","getFullYear","goBack","getFilmDetailsRequest","Actors","ActorAdapter","birthday","placeOfBirth","place_of_birth","deathDay","deathday","biography","Actor","isPersonDetailsLoading","setDetails","isFilmLoaded","setFilmLoad","innerAsyncFunction","a","prevState","with_cast","sort_by","e","format","NotFound","Routes","path","exact","component","Main","AsideMenu","loadGenres","isLoading","isError","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1a2da8de.chunk.js","sourcesContent":["const FILM_NAVIGATION = [\n  {\n    name: \"Popular\",\n    label: \"popular\",\n    icon: \"fas fa-heart\",\n  },\n  {\n    name: \"Top Rated\",\n    label: \"top_rated\",\n    icon: \"fas fa-chart-line\",\n  },\n  {\n    name: \"Upcoming\",\n    label: \"upcoming\",\n    icon: \"fas fa-table\",\n  },\n];\n\nconst RoutePathes = {\n  MOVIES: \"/movies\",\n  FILM_DETAILS: \"/film-details\",\n  ROOT: \"/\",\n  CAST: \"/cast\",\n  ACTOR: \"/actor\",\n  BUILD: \"/Movie-app-build-version\"\n};\n\nconst imageUrl = \"https://image.tmdb.org/t/p/w342/\";\n\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/https://api.themoviedb.org/3\";\n\nexport { FILM_NAVIGATION, BASE_URL, RoutePathes, imageUrl };\n","const ActionType = {\n  GET_GENRES_REQUEST: \"GET_GENRES_REQUEST\",\n  GET_GENRES_SUCCESS: \"GET_GENRES_SUCCESS\",\n  GET_GENRES_ERROR: \"GET_GENRES_ERROR\",\n  CHANGE_ACTIVE_GENRE: \"CHANGE_ACTIVE_GENRE\",\n};\n\nexport default ActionType;\n","import { FILM_NAVIGATION } from \"../../../constants/contants\";\nimport ActionType from \"./constants/constants\";\n\nconst initialState = {\n  genres: [],\n  filmGenres: FILM_NAVIGATION,\n  active: FILM_NAVIGATION[0].label,\n  loading: false,\n  error: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.GET_GENRES_REQUEST:\n      return { ...state, loading: true };\n\n    case ActionType.GET_GENRES_SUCCESS:\n      return { ...state, loading: false, genres: action.payload };\n\n    case ActionType.GET_GENRES_ERROR:\n      return { ...state, loading: false, error: true };\n\n    case ActionType.CHANGE_ACTIVE_GENRE:\n      return { ...state, active: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };\n","const ActionType = {\n  GET_FILMS_REQUEST: \"GET_FILMS_REQUEST\",\n  GET_FILM_SUCCESS: \"GET_FILM_SUCCESS\",\n  GET_FILM_ERROR: \"GET_FILM_ERROR\",\n  GET_MORE_FILM_REQUEST: \"GET_MORE_FILM_REQUEST\",\n  GET_MORE_FILM_SUCCESS: \"GET_MORE_FILM_SUCCESS\",\n  GET_TOTAL_FILMS_PAGES: \"GET_TOTAL_FILMS_PAGES\",\n  SET_CURRENT_PAGE: \"SET_CURRENT_PAGE\",\n  SET_SEARCH_STRING: \"SET_SEARCH_STRING\",\n  GET_FILM_DETAILS_REQUEST: \"GET_FILM_DETAILS_REQUEST\",\n  GET_FILM_DETAILS_SUCCESS: \"GET_FILM_DETAILS_SUCCESS\",\n  GET_FILM_DETAILS_ERROR: \"GET_FILM_DETAILS_ERROR\",\n};\n\nexport default ActionType;\n","import { Reducer } from \"redux\";\nimport ActionType from \"./constants/constants\";\n\nconst initialState = {\n  films: [],\n  filmDetails: {\n    loading: false,\n    error: false,\n    details: null,\n  },\n  loading: false,\n  loadingMoreFilms: false,\n  error: false,\n  currentPage: 0,\n  totalPages: 0,\n  searchString: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.GET_FILMS_REQUEST:\n      return { ...state, loading: true, error: false };\n\n    case ActionType.GET_FILM_SUCCESS:\n      return {\n        ...state, loading: false, films: action.payload.data, totalPages: action.payload.totalPages,\n      };\n\n    case ActionType.GET_MORE_FILM_REQUEST:\n      return { ...state, loadingMoreFilms: true };\n\n    case ActionType.GET_MORE_FILM_SUCCESS:\n      return { ...state, loadingMoreFilms: false, films: [...state.films, ...action.payload] };\n\n    case ActionType.GET_TOTAL_FILMS_PAGES:\n      return { ...state, totalPages: action.payload };\n\n    case ActionType.SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.payload };\n\n    case ActionType.GET_FILM_ERROR:\n      return { ...state, loading: false, error: true };\n\n    case ActionType.SET_SEARCH_STRING:\n      return { ...state, searchString: action.payload };\n\n    case ActionType.GET_FILM_DETAILS_REQUEST:\n      return { ...state, filmDetails: { ...state.filmDetails, loading: true } };\n\n    case ActionType.GET_FILM_DETAILS_SUCCESS:\n      return { ...state, filmDetails: { ...state.filmDetails, loading: false, details: action.payload } };\n\n    case ActionType.GET_FILM_DETAILS_ERROR:\n      return { ...state, filmDetails: { ...state.filmDetails, loading: false, error: true } };\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };\n","import { combineReducers } from \"redux\";\nimport { reducer as genreReducer } from \"../reducers/genres/reducer\";\nimport { reducer as filmsReducer } from \"../reducers/films/reducer\";\n\nexport default combineReducers({\n  genre: genreReducer,\n  films: filmsReducer,\n});\n","class GenreAdapter {\n  static addIconField(values) {\n    return values.map((value) => {\n      return { ...value, icon: \"fas fa-dot-circle\", label: value.name };\n    });\n  }\n}\n\nexport default GenreAdapter;\n","export default class FilmAdapter {\n  static changeKeyName(values) {\n    return values.map(this.changeValues);\n  }\n\n  static changeValues(value) {\n    return {\n      genreIds: value.genre_ids,\n      id: value.id,\n      overview: value.overview,\n      title: value.title,\n      adult: value.adult,\n      posterPath: value.poster_path,\n      originalLanguage: value.original_language,\n      voteAverage: value.vote_average,\n      releaseDate: value.release_date,\n    };\n  }\n}\n","import GenreAdapter from \"./genre\";\n\nexport default class FilmDetailsAdapter {\n  static changeValuesToFilmDetails(value) {\n    return {\n      id: value.id,\n      overview: value.overview,\n      title: value.title,\n      adult: value.adult,\n      posterPath: value.poster_path,\n      originalLanguage: value.original_language,\n      voteAverage: value.vote_average,\n      releaseDate: value.release_date,\n      homepage: value.homepage,\n      runtime: value.runtime,\n      tagline: value.tagline,\n      voteCount: value.vote_count,\n      genres: GenreAdapter.addIconField(value.genres),\n    };\n  }\n}\n","import ActionType from \"../constants/constants\";\nimport FilmAdapter from \"../../../../utils/adapters/film\";\nimport FilmDetailsAdapter from \"../../../../utils/adapters/film-details\";\n\n// Запрос на получение всех фильмов\nconst getFilmsRequest = (type) => ({ type: ActionType.GET_FILMS_REQUEST, payload: type });\n\n// Текущая страница\nconst setCurrentPage = (page) => ({ type: ActionType.SET_CURRENT_PAGE, payload: page });\n\n// Фильмы получены успешно\nconst getFilmsSuccess = (films, totalPages) => (\n  { type: ActionType.GET_FILM_SUCCESS, payload: { data: FilmAdapter.changeKeyName(films), totalPages } }\n);\n\n// Получить больше фильмов(следующая страница с фильмами). Запрос\nconst getMoreFilmsRequest = (type, page) => (\n  { type: ActionType.GET_MORE_FILM_REQUEST, payload: { type, page } });\n\n// Фильмы получены\nconst getMoreFilmsSuccess = (films) => (\n  { type: ActionType.GET_MORE_FILM_SUCCESS, payload: FilmAdapter.changeKeyName(films) });\n\n// Ошибка при получении фильмов\nconst getFilmsError = () => ({ type: ActionType.GET_FILM_ERROR });\n\n// Установить строку с поисками фильмов\nconst setSearchString = (value) => ({ type: ActionType.SET_SEARCH_STRING, payload: value });\n\n// Получить детальную информацию о фильме. Запрос\nconst getFilmDetailsRequest = (id) => ({ type: ActionType.GET_FILM_DETAILS_REQUEST, payload: id });\n\n// Детальная информация полученая\nconst getFilmDetailsSuccess = (film) => (\n  { type: ActionType.GET_FILM_DETAILS_SUCCESS, payload: FilmDetailsAdapter.changeValuesToFilmDetails(film) }\n);\n\n// Ошибка при получении детальной информации\nconst getFilmDetailsError = () => ({ type: ActionType.GET_FILM_DETAILS_ERROR });\n\nexport {\n  getFilmsError,\n  getFilmsRequest,\n  getFilmsSuccess,\n  getMoreFilmsRequest,\n  getMoreFilmsSuccess,\n  setCurrentPage,\n  setSearchString,\n  getFilmDetailsRequest,\n  getFilmDetailsSuccess,\n  getFilmDetailsError,\n};\n","import axios from \"axios\";\nimport { BASE_URL } from \"../constants/contants\";\nimport key from \"../config/key\";\n\nclass Api {\n\n  constructor(url, token) {\n    this.api = axios.create({\n      baseURL: url,\n      params: {\n        api_key: token,\n      },\n      timeout: 90000,\n      headers: { \"X-Custom-Header\": \"foobar\" },\n      withCredentials: false,\n    });\n    this.token = token;\n\n    this.getGenres = this.getGenres.bind(this);\n    this.getFilms = this.getFilms.bind(this);\n    this.getFilmDetails = this.getFilmDetails.bind(this);\n    this.getRecommendations = this.getRecommendations.bind(this);\n    this.getFilmCast = this.getFilmCast.bind(this);\n    this.getPersonDetails = this.getPersonDetails.bind(this);\n    this.discover = this.discover.bind(this);\n  }\n\n  // Жанры\n  getGenres() {\n    return this.api.get(\"genre/movie/list\", { params: { api_key: this.token } });\n  }\n\n  // Запросы по фильмам\n  getFilms(type, page = 1) {\n    return this.api.get(`movie/${type}`, { params: { api_key: this.token, language: \"en-US\", page } });\n  }\n\n  // Запросы по детальной информации о фильме\n  getFilmDetails(id) {\n    return this.api.get(`movie/${id}`, { params: { api_key: this.token } });\n  }\n\n  getRecommendations(id) {\n    return this.api.get(`movie/${id}/recommendations`, { params: { api_key: this.token } });\n  }\n\n  getFilmCast(id) {\n    return this.api.get(`movie/${id}/credits`, { params: { api_key: this.token } });\n  }\n\n  // Запросы о актере\n  getPersonDetails(id) {\n    return this.api.get(`person/${id}`, { params: { api_key: this.token } });\n  }\n\n  discover(params) {\n    return this.api.get(\"discover/movie\", { params: { api_key: this.token, ...params } });\n  }\n}\n\nexport default new Api(BASE_URL, key);\n","const key = \"f3dfa7a0f96b31113bbc972260285be3\";\n\nexport default key;\n","import { put, call, takeEvery } from \"redux-saga/effects\";\nimport ActionType from \"../constants/constants\";\nimport { getGenresSuccess, getGenresError } from \"../actions/actions\";\nimport { setCurrentPage } from \"../../films/actions/actions\";\nimport Service from \"../../../../api/api\";\n\nfunction* genreSaga() {\n  try {\n    const response = yield call(Service.getGenres);\n    yield put(getGenresSuccess(response.data.genres));\n    yield put(setCurrentPage(1));\n  } catch (e) {\n    yield put(getGenresError());\n  }\n}\n\nexport default function* watchGenreSaga() {\n  yield takeEvery(ActionType.GET_GENRES_REQUEST, genreSaga);\n}\n","import ActionType from \"../constants/constants\";\nimport GenreAdapter from \"../../../../utils/adapters/genre\";\n\nconst getGenresRequest = () => ({ type: ActionType.GET_GENRES_REQUEST });\n\nconst getGenresSuccess = (genres) => ({\n  type: ActionType.GET_GENRES_SUCCESS,\n  payload: GenreAdapter.addIconField(genres),\n});\n\nconst getGenresError = () => ({ type: ActionType.GET_GENRES_ERROR });\n\nconst changeActiveGenre = (active) => ({ type: ActionType.CHANGE_ACTIVE_GENRE, payload: active });\n\nexport {\n  getGenresRequest,\n  getGenresSuccess,\n  getGenresError,\n  changeActiveGenre,\n};\n","import { put, call, takeEvery } from \"redux-saga/effects\";\nimport ActionType from \"../constants/constants\";\nimport {\n  getFilmsSuccess, getFilmsError, setCurrentPage, getMoreFilmsSuccess, getFilmDetailsSuccess, getFilmDetailsError,\n} from \"../actions/actions\";\nimport Service from \"../../../../api/api\";\n\n\nfunction* filmsMoreSaga({ payload }) {\n  try {\n    const response = typeof payload.type === \"string\"\n      ? yield call(Service.getFilms, payload.type, payload.page)\n      : yield call(Service.discover, { with_genres: payload.type, page: payload.page });\n\n    yield put(setCurrentPage(response.data.page));\n    yield put(getMoreFilmsSuccess(response.data.results));\n  } catch (e) {\n    yield put(getFilmsError());\n  }\n}\n\nfunction* filmsSaga(params) {\n  try {\n    const type = params.payload;\n    const response = typeof type === \"string\" ? yield call(Service.getFilms, type) : yield call(Service.discover, { with_genres: type });\n    yield put(setCurrentPage(response.data.page));\n    yield put(getFilmsSuccess(response.data.results, response.data.total_pages));\n  } catch (e) {\n    yield put(getFilmsError());\n    throw new Error(\"Ошибка при получении списка фильмов\");\n  }\n}\n\nfunction* getFilmDetailsSaga(params) {\n  try {\n    const response = yield call(Service.getFilmDetails, Number(params.payload));\n    yield put(getFilmDetailsSuccess(response.data));\n  } catch (e) {\n    yield put(getFilmDetailsError());\n    throw new Error(\"Ошибка при получении информации о фильме\");\n  }\n}\n\nexport function* watchFilmsSaga() {\n  yield takeEvery(ActionType.GET_FILMS_REQUEST, filmsSaga);\n}\n\nexport function* watchMoreFilmsSaga() {\n  yield takeEvery(ActionType.GET_MORE_FILM_REQUEST, filmsMoreSaga);\n}\n\nexport function* watchFilmDetailsSaga() {\n  yield takeEvery(ActionType.GET_FILM_DETAILS_REQUEST, getFilmDetailsSaga);\n}\n","import { all } from \"redux-saga/effects\";\nimport watchGenreSaga from \"../reducers/genres/saga/saga\";\nimport { watchFilmDetailsSaga, watchMoreFilmsSaga, watchFilmsSaga } from \"../reducers/films/saga/saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    watchGenreSaga(),\n    watchFilmsSaga(),\n    watchMoreFilmsSaga(),\n    watchFilmDetailsSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../redux/reducers/redusers\";\nimport rootSaga from \"../redux/sagas/sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\n\nconst Spinner = (props) => {\n  return (\n    <div className={`${props.isWrapperFull ? \"spinner-wrapper\" : props.wrapperClass}`}>\n      <svg className=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\" />\n      </svg>\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n    isWrapperFull: true,\n    wrapperClass: \"\",\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst Mistake = () => {\n  return (\n    <div className=\"error\">\n      <div className=\"error__wrapper\">\n        <p>Упс...Что то пошло не так</p>\n        <p>Возможно сервер недоступен, попробуйте чуть позже</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Mistake;\n","import React from \"react\";\n\nconst Header = (props) => {\n  function inputSearchHandle(evt) {\n    props.changeSearchString(evt.target.value);\n  }\n  return (\n    <div className=\"header\">\n      <h2>{props.activeGenre}</h2>\n      <form className=\"search-form\">\n        <div>\n          <span className=\"search-form__icon fas fa-search\" />\n          <input className=\"search-form__input\" type=\"text\" placeholder=\"Найти фильм...\" onChange={inputSearchHandle} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Header;\n","import { createSelector } from \"reselect\";\n\nconst getActiveGenreName = createSelector(\n  (state) => { return [...state.genre.genres, ...state.genre.filmGenres]; },\n  (state) => { return state.genre.active; },\n  (genres, active) => {\n    const idx = genres.findIndex((genre) => genre.label === active);\n\n    return genres[idx].name;\n  },\n);\n\nexport default getActiveGenreName;\n","import { connect } from \"react-redux\";\nimport Header from \"./header\";\nimport getActiveGenreName from \"./selectors/selectors\";\nimport { setSearchString } from \"../../redux/reducers/films/actions/actions\";\n\nconst mapStateToProps = (state) => ({\n  activeGenre: getActiveGenreName(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeSearchString: (value) => dispatch(setSearchString(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import moment from \"moment\";\n\nconst getRatingClass = (vote) => {\n  let result;\n\n  if (vote > 0 && vote <= 5) {\n    result = \"low\";\n  }\n\n  if (vote > 5 && vote <= 8) {\n    result = \"medium\";\n  }\n\n  if (vote > 8) {\n    result = \"high\";\n  }\n\n  return `film-card__rating--${result}-rate`;\n};\n\nconst calculateAge = (birthDate, deathDate = null, type = true) => {\n  const dateStart = type ? moment() : moment(deathDate, \"YYYY\");\n  const dateEnd = moment(birthDate, \"YYYY\");\n\n  return dateStart.diff(dateEnd, \"years\");\n};\n\nexport { getRatingClass, calculateAge };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RoutePathes, imageUrl } from \"../../constants/contants\";\nimport { getRatingClass } from \"../../utils/utils\";\n\n\nconst FilmCard = (props) => {\n  const { vote } = props;\n  const voteRating = getRatingClass(vote);\n\n  return (\n    <Link to={`${RoutePathes.FILM_DETAILS}/${props.id}`}>\n      <div className=\"film-card\">\n        {props.poster\n          ? <img className=\"film-card__image\" src={`${imageUrl}${props.poster}`} alt=\"Изображение фильма\" />\n          : <div className=\"film-card__no-image\">{props.name}</div>}\n        {vote !== 0 && <span className={`film-card__rating ${voteRating}`}>{vote}</span>}\n      </div>\n    </Link>\n  );\n};\n\nFilmCard.defaultProps = {\n  name: \"\",\n};\n\nexport default FilmCard;\n","import React from \"react\";\nimport FilmCard from \"../../../components/film-card/film-card\";\n\nfunction createFilmCards(films) {\n  return films.map((film) => {\n    let filmCardProps = {};\n\n    if (!film.posterPath) {\n      filmCardProps = {\n        name: film.title,\n      };\n    }\n\n    return (\n      <FilmCard\n        key={film.id}\n        poster={film.posterPath}\n        vote={film.voteAverage}\n        id={film.id}\n        {...filmCardProps}\n      />\n    );\n  });\n}\n\nexport default createFilmCards;\n","import React, { useEffect } from \"react\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport Mistake from \"../../components/mistake/mistake\";\nimport Header from \"../../components/header/header.connect\";\nimport createFilmCards from \"./utils/utils\";\n\n\nconst FilmList = (props) => {\n  const { loading, error } = props;\n\n  const handleScroll = () => {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight && !props.loadingMoreFilms) {\n      if (props.currentPage <= props.totalPage) {\n        const nextPage = props.currentPage + 1;\n        props.loadMoreFilms(props.currentGenre, nextPage);\n      }\n    }\n  };\n\n  // Костыль, чтобы обновлять слушатель на скролле\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [props]);\n\n  useEffect(() => {\n    props.loadFilms(props.currentGenre);\n    // Если изменился жанр, то сбрасываем обработчик, чтобы он не срабатывал при загрузке новых фильмов\n    window.removeEventListener(\"scroll\", handleScroll);\n  }, [props.currentGenre]);\n\n  return (\n    <>\n      {loading && <Spinner />}\n      {error && <Mistake />}\n      <Header />\n      <div className=\"film-list\">\n        {!loading && createFilmCards(props.films) }\n      </div>\n      {props.loadingMoreFilms && <Spinner isWrapperFull={false} wrapperClass=\"ta-c\" />}\n    </>\n  );\n};\n\nexport default FilmList;\n","import { createSelector } from \"reselect\";\n\nconst getFilteredFilms = createSelector(\n  (state) => { return state.films.films; },\n  (state) => { return state.films.searchString; },\n  (films, searchString) => {\n    return films.filter((film) => {\n      return film.title.toLocaleLowerCase().includes(searchString.toLocaleLowerCase());\n    });\n  },\n);\n\nconst getActiveGenre = createSelector(\n  (state) => { return [...state.genre.filmGenres, ...state.genre.genres]; },\n  (state) => { return state.genre.active; },\n  (genres, active) => {\n    const idx = genres.findIndex((genre) => genre.label === active);\n    return genres[idx].id ? genres[idx].id : genres[idx].label;\n  },\n);\n\nexport { getFilteredFilms, getActiveGenre };\n","import { connect } from \"react-redux\";\nimport FilmList from \"./film-list\";\nimport { getFilmsRequest, getMoreFilmsRequest } from \"../../redux/reducers/films/actions/actions\";\nimport { getFilteredFilms, getActiveGenre } from \"./selectors/selectors\";\n\nconst mapStateToProps = (state) => ({\n  loading: state.films.loading,\n  loadingMoreFilms: state.films.loadingMoreFilms,\n  error: state.films.error,\n  currentGenre: getActiveGenre(state),\n  currentPage: state.films.currentPage,\n  totalPage: state.films.totalPages,\n  films: getFilteredFilms(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadFilms: (type) => dispatch(getFilmsRequest(type)),\n  loadMoreFilms: (type, page) => dispatch(getMoreFilmsRequest(type, page)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmList);\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from \"react\";\nimport { RoutePathes } from \"../../../constants/contants\";\nimport history from \"../../../utils/history\";\n\nconst MenuListItem = (props) => {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions,jsx-a11y/click-events-have-key-events\n    <li\n      className={`menu-list__item ${props.active === props.item.label ? \"menu-list__item--active\" : \"\"}`}\n      onClick={() => {\n        if (props.active === props.item.label) {\n          return;\n        }\n        // Меняем активный жанр\n        props.changeActiveGenre(props.item.label);\n        // Обнуляем активную страницу\n        props.refreshCurrentPage();\n\n        history.push(RoutePathes.MOVIES);\n      }}\n    >\n      <span className={`menu-list__item-icon ${props.item.icon}`} />\n      {props.item.name}\n    </li>\n  );\n};\n\nexport default MenuListItem;\n","import React from \"react\";\nimport MenuListItem from \"./components/menu-list-item\";\n\nconst MenuList = (props) => {\n  return (\n    <ul className=\"menu-list\">\n      {props.items.map((item) => {\n        return (\n          <MenuListItem\n            key={item.id ? item.id : item.label}\n            item={item}\n            active={props.noActive ? \"\" : props.activeGenre}\n            changeActiveGenre={props.changeActiveGenre}\n            refreshCurrentPage={props.refreshCurrentPage}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMenuList.defaultProps = {\n  noActive: false,\n};\n\nexport default MenuList;\n","import { connect } from \"react-redux\";\nimport MenuList from \"./menu-list\";\nimport { changeActiveGenre } from \"../../redux/reducers/genres/actions/actions\";\nimport { setCurrentPage } from \"../../redux/reducers/films/actions/actions\";\n\nconst mapStateToProps = (state) => ({\n  activeGenre: state.genre.active,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeActiveGenre: (active) => dispatch(changeActiveGenre(active)),\n  refreshCurrentPage: () => dispatch(setCurrentPage(0)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuList);\n","import React from \"react\";\n\nconst Rating = (props) => {\n  return (\n    <div className={`rating ${props.containerClass}`}>\n      <i className=\"fas fa-star rating__start\" />\n      <div className=\"rating__inner\">\n        <div>\n          <strong>{props.voteAverage}</strong>\n          {\" \"}\n          / 10\n        </div>\n        <span className=\"rating__vote-count\">{props.voteCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Rating;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RoutePathes, imageUrl } from \"../../constants/contants\";\n\n\nconst Cast = (props) => {\n  let castToShow;\n\n  // В завимимости от пропса, показываем либо всех актеров, либо определенное количество\n  if (typeof props.itemsToShow === \"number\") {\n    castToShow = props.cast.slice(0, props.itemsToShow);\n  }\n\n  if (typeof props.itemsToShow === \"string\") {\n    castToShow = props.cast;\n  }\n\n  return (\n    <>\n      <ul className=\"cast\">\n        {castToShow.map((element) => {\n          return (\n            <li className=\"cast__item\" key={element.id}>\n              <Link to={`${RoutePathes.ACTOR}/${element.id}`} className=\"cast__actor\">\n                <img className=\"cast__image\" src={`${imageUrl}${element.profilePath}`} alt=\"\" />\n              </Link>\n              <div className=\"cast__wrapper\">\n                <p>\n                  <Link to={`${RoutePathes.ACTOR}/${element.id}`} className=\"cast__name\">{element.name}</Link>\n                </p>\n                <p>{element.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      {props.itemsToShow !== \"all\"\n      && (\n      <Link to={`${RoutePathes.CAST}/${props.id}`}>\n        Показать весь актерский состав\n      </Link>\n      )}\n    </>\n  );\n};\n\nCast.defaultProps = {\n  id: null,\n};\n\nexport default Cast;\n","export default class CastAdapter {\n  static adaptValues(values) {\n    return values.map((value) => this.adaptValue(value));\n  }\n\n  static adaptValue(value) {\n    return {\n      character: value.character,\n      id: value.id,\n      name: value.name,\n      profilePath: value.profile_path,\n    };\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport MenuList from \"../../components/menu-list/menu-list.connect\";\nimport createFilmCards from \"../film-list/utils/utils\";\nimport Rating from \"../../components/rating/rating\";\nimport Cast from \"../../components/cast/cast\";\nimport Mistake from \"../../components/mistake/mistake\";\nimport FilmAdapter from \"../../utils/adapters/film\";\nimport history from \"../../utils/history\";\nimport Service from \"../../api/api\";\nimport CastAdapter from \"../../utils/adapters/cast\";\n\nconst FilmDetails = (props) => {\n  const [filmsRecommendations, setFilms] = useState([]);\n  const [isRecommendationsLoading, setRecommendationLoader] = useState(false);\n  const [isCastLoading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  const { id } = props.match.params;\n  const { loading, error, details } = props;\n\n  const getFilmRecommendations = React.useCallback(() => {\n    setRecommendationLoader(true);\n    // Получаем список рекомендаций\n    Service.getRecommendations(id)\n      .then((body) => {\n        const films = FilmAdapter.changeKeyName(body.data.results.slice(0, 12));\n        setFilms(films);\n        setRecommendationLoader(false);\n      });\n  }, [id]);\n\n  const getFilmCast = React.useCallback(() => {\n    setLoading(true);\n\n    Service.getFilmCast(id)\n      .then((body) => {\n        setCast(CastAdapter.adaptValues(body.data.cast));\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, [id]);\n\n  // Загружаем новые данные, если обновился ID фильма\n  useEffect(() => {\n    props.loadDetails(id);\n\n    // Получаем список рекомандаций к фильму\n    getFilmRecommendations();\n\n    // Загружаем актерский состав\n    getFilmCast();\n  }, [id]);\n\n  const isContentLoading = loading || isCastLoading;\n  return (\n    <>\n      {error && <Mistake />}\n      {isContentLoading && <Spinner />}\n      {details && !isContentLoading && (\n        <>\n          <div className=\"film-details\">\n            <>\n              <div className={`${details.posterPath ? \"\" : \"film-details__poster\"}`}>\n                {details.posterPath\n                  ? <img src={`https://image.tmdb.org/t/p/w342/${details.posterPath}`} alt=\"Изображение\" />\n                  : <>No poster :(</>}\n              </div>\n              <div className=\"film-details__wrapper\">\n                <div className=\"film-details__header\">\n                  <div className=\"film-details__header-inner\">\n                    <div>\n                      <h1 className=\"film-details__header-text\">{details.title}</h1>\n                      <p className=\"film-details__header-information\">\n                        {details.runtime !== 0 ? `${details.runtime} min. /` : null }\n                        {\" \"}\n                        {new Date(props.details.releaseDate).getFullYear()}\n                      </p>\n                    </div>\n                    <Rating\n                      containerClass=\"film-details__rating\"\n                      voteAverage={details.voteAverage}\n                      voteCount={details.voteCount}\n                    />\n                  </div>\n                  <h2 className=\"film-details__header-subtext\">{details.tagline}</h2>\n                </div>\n                <div className=\"film-details__genres\">\n                  <h3>Жанры</h3>\n                  <MenuList items={details.genres} noActive />\n                </div>\n                <div className=\"film-details__description\">\n                  <h3>Описание</h3>\n                  <p>\n                    {details.overview}\n                  </p>\n                </div>\n                <div className=\"film-details__description\">\n                  <h3>В ролях: </h3>\n                  <Cast cast={cast} itemsToShow={6} id={id} />\n                </div>\n                <div>\n                  <button className=\"film-details__button\" type=\"button\" onClick={() => { history.goBack(); }}>Назад</button>\n                </div>\n              </div>\n            </>\n          </div>\n          <div>\n            <h2>Возможно вам понравится: </h2>\n            <div className=\"film-list film-list--small\">\n              {isRecommendationsLoading && <Spinner />}\n              {!isRecommendationsLoading && createFilmCards(filmsRecommendations)}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FilmDetails;\n","import { connect } from \"react-redux\";\nimport FilmDetails from \"./film-details\";\nimport { getFilmDetailsRequest } from \"../../redux/reducers/films/actions/actions\";\n\nconst mapStateToProps = (state) => ({\n  details: state.films.filmDetails.details,\n  loading: state.films.filmDetails.loading,\n  error: state.films.filmDetails.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadDetails: (id) => dispatch(getFilmDetailsRequest(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmDetails);\n","import Cast from \"../../components/cast/cast\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport React, { useEffect, useState } from \"react\";\nimport Service from \"../../api/api\";\nimport CastAdapter from \"../../utils/adapters/cast\";\nimport history from \"../../utils/history\";\n\n\nconst Actors = (props) => {\n  const { id } = props.match.params;\n  const [isCastLoading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    Service.getFilmCast(id)\n      .then((body) => {\n        setCast(CastAdapter.adaptValues(body.data.cast));\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <div className=\"actors\">\n      <div className=\"actors__header\">\n        <h2>Состав</h2>\n        <button\n          type=\"button\"\n          className=\"actors__back-button\"\n          onClick={() => { history.goBack(); }}\n        >\n          <i className=\"fas fa-arrow-left actors__icon\" />\n        </button>\n      </div>\n      {isCastLoading && <Spinner />}\n      {!isCastLoading && <Cast cast={cast} itemsToShow=\"all\" />}\n    </div>\n  );\n};\n\nexport default Actors;\n","export default class ActorAdapter {\n  static adaptValues(value) {\n    return {\n      birthday: value.birthday,\n      name: value.name,\n      placeOfBirth: value.place_of_birth,\n      profilePath: value.profile_path,\n      deathDay: value.deathday,\n      biography: value.biography,\n    };\n  }\n}\n","import React from \"react\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport { useEffect, useState } from \"react\";\nimport createFilmCards from \"../film-list/utils/utils\";\nimport moment from \"moment\";\nimport FilmAdapter from \"../../utils/adapters/film\";\nimport Service from \"../../api/api\";\nimport ActorAdapter from \"../../utils/adapters/actor\";\nimport { calculateAge } from \"../../utils/utils\";\n\nconst Actor = (props) => {\n  const { id } = props.match.params;\n  const [isPersonDetailsLoading, setLoading] = useState(false);\n  const [details, setDetails] = useState();\n  const [isFilmLoaded, setFilmLoad] = useState(false);\n\n  useEffect(() => {\n    // Вн. асинх. функция, нужна, чтобы стейт не изменялся раньше, чем придут данные с сервера\n    const innerAsyncFunction = async () => {\n      setLoading(true);\n\n      await Service.getPersonDetails(id)\n        .then((body) => {\n          setDetails(((prevState) => ({ ...prevState, ...ActorAdapter.adaptValues(body.data) })));\n        });\n\n      setLoading(false);\n    };\n\n    try {\n      innerAsyncFunction();\n\n      Service.discover({ with_cast: id, sort_by: \"release_date.desc\" })\n        .then((body) => {\n          setDetails(((prevState) => ({ ...prevState, films: FilmAdapter.changeKeyName(body.data.results) })));\n          setFilmLoad(true);\n        });\n    } catch (e) {\n      throw new Error();\n    }\n  }, []);\n\n  return (\n    <>\n      {isPersonDetailsLoading && <Spinner />}\n      {!isPersonDetailsLoading && details\n      && (\n      <>\n        <div className=\"actor-details\">\n          <div className=\"actor-details__image-wrapper\">\n            {details.profilePath\n              ? <img src={`https://image.tmdb.org/t/p/w342/${details.profilePath}`} alt=\"Фотография актера\" />\n              : <p>No image</p>}\n\n          </div>\n          <div className=\"actor-details__information\">\n            <h2 className=\"actor-details__name\">{details.name}</h2>\n\n            {details.birthday\n             && (\n             <div>\n               <h3>Дата рождения</h3>\n               <p>\n                 {moment(details.birthday).format(\"DD MMMM YYYY\") }\n                 {details.deathDay ? null : ` (${calculateAge(details.birthday)})`}\n               </p>\n             </div>\n             )}\n\n            {details.deathDay\n             && (\n             <div>\n               <h3>Дата смерти</h3>\n               <p>\n                 {moment(details.deathDay).format(\"DD MMMM YYYY\") }\n                 {` (${calculateAge(details.birthday, details.deathDay, false)})`}\n               </p>\n             </div>\n             )}\n\n            {details.biography\n            && (\n            <div>\n              <h3>Биография</h3>\n              <p>{details.biography}</p>\n            </div>\n            )}\n\n          </div>\n        </div>\n        <div>\n          <h2>Фильмография: </h2>\n          <div className=\"film-list film-list--small\">\n            {isFilmLoaded && createFilmCards(details.films)}\n          </div>\n        </div>\n      </>\n      )}\n    </>\n  );\n};\n\nexport default Actor;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>Страница не найдена</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport {\n  Switch, Route, Redirect,\n} from \"react-router-dom\";\nimport { RoutePathes } from \"../constants/contants\";\nimport FilmList from \"../pages/film-list/film-list.connect\";\nimport FilmDetails from \"../pages/film-details/film-details.connect\";\nimport Actors from \"../pages/actors/actors\";\nimport Actor from \"../pages/actor/actor\";\nimport NotFound from \"../components/not-found/not-found\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path={RoutePathes.MOVIES} exact component={FilmList} />\n      <Route path={`${RoutePathes.CAST}/:id?`} exact component={Actors} />\n      <Route path={`${RoutePathes.ACTOR}/:id?`} exact component={Actor} />\n      <Route path={`${RoutePathes.FILM_DETAILS}/:id?`} component={FilmDetails} />\n      <Route path={RoutePathes.ROOT} exact>\n        <Redirect to={RoutePathes.MOVIES} />\n      </Route>\n      <Route path={RoutePathes.BUILD} exact>\n        <Redirect to={RoutePathes.MOVIES} />\n      </Route>\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"../../routes/routes\";\n\nconst Main = () => {\n  return (\n    <div className=\"main\">\n      <Routes />\n    </div>\n  );\n};\n\nexport default Main;\n","import MenuList from \"../../components/menu-list/menu-list.connect\";\nimport React, { useEffect } from \"react\";\nimport Spinner from \"../../components/spinner/spinner\";\n\nconst AsideMenu = (props) => {\n  useEffect(() => {\n    props.loadGenres();\n  }, []);\n  return (\n    <aside className=\"side-menu\">\n      <div>\n        <img width={100} src=\"./image/watch-movie.svg\" alt=\"Лого\" />\n      </div>\n      {props.isLoading && <Spinner />}\n      {!props.isLoading && (\n      <>\n        <div>\n          <h3>Фильмы</h3>\n          <MenuList items={props.filmGenres} />\n        </div>\n        <div>\n          <h3>Жанры</h3>\n          <MenuList items={props.genres} />\n        </div>\n      </>\n      )}\n    </aside>\n  );\n};\n\nexport default AsideMenu;\n","import { connect } from \"react-redux\";\nimport { getGenresRequest } from \"../../redux/reducers/genres/actions/actions\";\nimport AsideMenu from \"./aside-menu\";\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.genre.loading,\n  isError: state.genre.error,\n  genres: state.genre.genres,\n  filmGenres: state.genre.filmGenres,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadGenres: () => dispatch(getGenresRequest()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideMenu);\n","import React from \"react\";\nimport Main from \"../../pages/main/main\";\nimport AsideMenu from \"../../pages/aside-menu/aside-menu.connect\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <AsideMenu />\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./style/style.scss\";\nimport App from \"./components/app/app\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./utils/history\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}